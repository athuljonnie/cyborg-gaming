<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Details</title>

   
    <style>
        body{
         
    
    margin-bottom: 40 px;
          
            background-image: url('/shop/img/8481.jpg');         
            color: rgb(220, 154, 0);
            font-family: 'DotGothic16', sans-serif;
        }

        .borderless td, .borderless th {
    border: none;
}
h1,
        h2,
        h3 {
            font-family: 'DotGothic16', sans-serif;
            color: #ffc107;
        }



        #navbar1 {
            background-color: #000000 !important;            
            font-family: 'DotGothic16', sans-serif;
        }

        .navbar-brand {
            color: white;
            font-weight: 900;
        }

        .navbar-brand:hover {
            color: white;
        }

        .navbar-nav {
            margin-left: auto;
        }

        .nav-item {
            padding: 0 15px;
        }

        .navbar-toggler {
            border: none;
            outline: none;
        }

        .navbar-toggler-icon {
            background-color: rgb(0, 0, 0);
        }

        @media (max-width: 767px) {
            .navbar-collapse {
                justify-content: center;
            }
        }

    
        .custom-card {
            
            background-color: #212121;
            color: #fff;
            border: none;
            border-radius: 10px;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
            padding: 20px;

        }

        .custom-card h2 {
            color: #ffc107;
            font-size: 24px;
            margin-bottom: 10px;
        }

        .custom-card ul {
            padding-left: 20px;
        }

        .custom-card li {
            margin-bottom: 10px;
        }

        .custom-card .card-link {
            color: #ffc107;
        }

        .custom-card .card-link:hover {
            text-decoration: none;
        }

        .cardtransparent{
            background: rgba( 255, 255, 255, 0.1 );

backdrop-filter: blur( 7.5px );
-webkit-backdrop-filter: blur( 7.5px );
border-radius: 10px;
border: 1px solid rgba( 255, 255, 255, 0.18 );
        }
        .card {
    position: relative;
    overflow: hidden; 
}

.profile-image {
    position: absolute;
    top: 10px;
    right: 10px;
    width: 60px; 
    height: 60px; 
    border-radius: 50%; 
    border: 2px solid #fff; 
    z-index: 1;
}

.list-group-item{
    background: rgba( 0, 0, 0, 0.4 );
backdrop-filter: blur( 10.5px );
-webkit-backdrop-filter: blur( 10.5px );
border: 1px solid rgba( 255, 255, 255, 0.18 );
color: #ffffff; 
font-family: 'DotGothic16', sans-serif;
letter-spacing: 2px;
}
    
.list-group-item:hover{
    cursor: pointer;
}
    </style>
</head>
<body>    
    <div class="container mt-4" style="text-decoration: solid; font-size: 16px;">
        <h2 style="padding: 10px;">Ordered Products</h2>
        <div class="row">
            <% orderData.products.forEach(function(product) { %>
            <div class="col-md-4 mb-4" >
                <div class="card" style="border-radius: 17px; background-color: rgba(0, 0, 0, 0.351);  ">
                    <div class="bg-image hover-overlay ripple ripple-surface ripple-surface-light"
                        data-mdb-ripple-color="light">
                        <img src="/uploads/<%= product.productId.productImage[0] %>"
                            style="border-top-left-radius: 15px; border-top-right-radius: 15px;" class="img-fluid"
                            alt="Product" />
                        <a href="#!">
                            <div class="mask"></div>
                        </a>
                    </div>
                    <div class="card-body pb-0" style="background-color: #0000002a;">
                        <div class="d-flex justify-content-between">
                            <div>
                                <p><a href="#!" style="color:rgb(220, 154, 0) ;"><%= product.productId.productName %></a></p>
                                <p>quantity:<a href="#!" style="color:rgb(220, 154, 0) ;"><%= product.quantity %></a></p>
                           
                            </div>
                            <div>
                                <div class="d-flex flex-row justify-content-end mt-1 mb-4 text-danger">
                                    <i class="fas fa-star"></i>
                                    <i class="fas fa-star"></i>
                                    <i class="fas fa-star"></i>
                                    <i class="fas fa-star"></i>
                                </div>
                                <p class="">Rated 4.0/5</p>
                            </div>
                        </div>
                    </div>
                    <hr class="my-0" />
                    <div class="card-body pb-0" style="background-color: #0000002a;">
                        <div class="d-flex justify-content-between">
                            <p><a href="#!" class="text-light">₹  <%=product.productId.productPrice%></a></p>

                        </div>
                      
                    </div>
                    <hr class="my-0" />
                    <div class="card-body" style="background-color: #0000002a;">
                        <div class="d-flex justify-content-between align-items-center pb-2 mb-1">
                          <a href="productdetails?productId=<%= product.productId._id %>">
                            <button type="button" class="btn btn-outline-warning shop-now-button">Shop Now</button>
                        </a>
                          </div>
                    </div>
                </div>
            </div>
            <% }) %>
        </div>
    </div>
    
        <h1 style="margin-left: 40px;">Order Details</h1>
        <div class="row mt-4" style="background-color: rgba(0, 0, 0, 0.351); border-radius: 17px; padding: 20px; margin: 40px;">
            <div class="col-md-6" >
                <h2>Order Information: </h2>
                <table class="table borderless" style="color:rgb(255, 255, 255)">
                    <tr>
                        <th>Order ID:</th>
                        <td><%= orderData._id %></td>
                    </tr>
                    <tr>
                        <th>Date:</th>
                        <td><%= orderData.createdAt%></td>
                    </tr>
                    <% if (orderData.deliverystatus === "delivered") { %>
                      <tr>
                          <th>Delivery Date:</th>
                          <td id = "deliveryDate"><%= orderData.deliveredAt%></td>
                      </tr>                     
                    <% } %>
                    <tr>
                        <th>Total Amount:</th>
                        <td style="color: tomato;">₹ <%= orderData.totalAmount.toFixed(2)%></td>
                    </tr>
                    <tr>
                        <th>Payment Method:</th>
                        <td><%= orderData.paymentMethod %></td>
                    </tr>
                    <tr>
                        <th>Delivery Status:</th>
                        <td style="color: cyan;"><%= orderData.deliverystatus %></td>
                    </tr>
                    <tr>
                        <th>Order Status:</th>
                        <td style="color: rgb(255, 255, 255);"><%= orderData.deliverystatus %></td>
                    </tr>
                </table>
            </div>
            <div class="col-md-6">
                <h2>Shipping Information: </h2>
                <address style="color: rgb(255, 255, 255);">
                  Full Name:  <%= orderData.deliveryDetails.Fullname %><br>
                    House: <%= orderData.deliveryDetails.house%><br>
                    Landmark: <%= orderData.deliveryDetails.landmark %><br>
                    City: <%= orderData.deliveryDetails.city %><br>
                    State: <%= orderData.deliveryDetails.state %>
                </address>
          
                <% if (orderData.deliverystatus === "pending" || orderData.deliverystatus === "shipped") { %>
                    <button class="btn btn-outline-danger" id="cancelButton">
                  Cancel this Order
                    </button>
                 
                <% } else if(orderData.deliverystatus === "delivered"){ %>
                  <button class="btn btn-outline-danger" id="returnButton">
                    Return this Order
                  </button>                  
                    <% }  else if (orderData.deliverystatus === "return approved") { %>
                      <div style="padding: 20px; margin-bottom: 5px;">
                        <p style="background-color: #00000056; display: inline-block; padding: 10px; color:rgb(220, 154, 0);border-radius: 17px;">
                            This order has been approved for return.<br>
                            <% if (orderData.paymentMethod === 'razorpay') { %>
                              Your purchase amount will be reflected in your eWallet shorlty                             
                            <% } %>
                        
                        </p>
                    </div>
                  <% }   else if (orderData.deliverystatus === "cancellation approved") { %>
                      <div style="padding: 20px; margin-bottom: 5px;">
                        <p style="background-color: #00000056; display: inline-block; padding: 10px; color:rgb(220, 154, 0);border-radius: 17px;">
                            This order has been cancelled<br>
                            <% if (orderData.paymentMethod === 'razorpay') { %>
                              Your purchase amount will be reflected in your eWallet shorlty                             
                            <% } %>
                        </p>
                    </div>
                  <% } %>
                   <a href="/generateInvoice?orderId=<%= orderData._id%>"> <button class="btn btn-outline-success"id="InvoiceButton">
                        Generate Invoice
                    </button></a>
                    



            </div>
            <div class="modal fade" id="returnModal" tabindex="-1" aria-labelledby="returnModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                  <div class="modal-content">
                    <div class="modal-header">
                      <h5 class="modal-title" id="returnModalLabel">Return Request</h5>
                      <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                      <label for="returnReason" class="form-label">Reason for Return:</label>
                      <input type="text" class="form-control" id="returnReason" placeholder="Enter reason" required>
                    </div>
                    <div class="modal-footer">
                      <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                      <button type="button" class="btn btn-primary" id="submitReturnRequest">Submit</button>
                    </div>
                  </div>
                </div>
              </div>
        </div>
       
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>

const deliveredAtString = document.getElementById('deliveryDate').textContent;


const parts = deliveredAtString.split(' ');
const day = parseInt(parts[2], 10);
const month = parts[1];
const year = parseInt(parts[3], 10);
const time = parts[4].split(':');
const hour = parseInt(time[0], 10);
const minute = parseInt(time[1], 10);
const second = parseInt(time[2], 10);


const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
const monthNumber = monthNames.indexOf(month);


const deliveredAt = new Date(year, monthNumber, day, hour, minute, second);


  const returnButton = document.getElementById('returnButton');
  const timerElement = document.getElementById('timer');



 function updateTimer() {
  const currentDate = new Date();
  const timeDifference = currentDate.getTime() - deliveredAt.getTime();
  const allowedDaysForReturn = 14;
  const remainingDays = Math.ceil(timeDifference / 8640000); 

  if (remainingDays > allowedDaysForReturn) {

    returnButton.setAttribute('disabled', 'disabled');
    timerElement.textContent = 'Return period has expired';
  } else {
   
    returnButton.removeAttribute('disabled');
    timerElement.textContent = `Days remaining for return: ${remainingDays}`;
  }
}


  updateTimer();

  
  setInterval(updateTimer, 60000);
</script>

<script>
    $(document).ready(function () {
        
        function handleButtonClick(status) {
            const orderId = '<%= orderData._id %>'; 
            $.ajax({
                url: '/cancelOrReturn', 
                method: 'POST', 
                data: {
                    orderId: orderId,
                    status: status 
                },
                success: function (response) {
                  
                    Swal.fire('Requested for approval.');
                },
                error: function (xhr, status, error) {
                    
                    console.error('Error:', error);
                    Swal.fire('Error', 'An error occurred', 'error');
                }
            });
        }

        
        $('#cancelButton').click(function () {
            Swal.fire({
                title: 'Confirm Cancellation',
                text: 'Are you sure you want to cancel this order?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes',
                cancelButtonText: 'No'
            }).then((result) => {
                if (result.isConfirmed) {
                    handleButtonClick('cancellationrequest');
                }
            });
        });

$('#returnButton').click(async function () {
  const { value: returnReason } = await Swal.fire({
    title: 'Reason for return',
    input: 'select',
    inputOptions: {
      'Defects': 'Defects',
      'Perfomance Dissatisfaction': 'Perfomance Dissatisfaction',
      'Software Compatibility Issues': 'Software Compatibility Issues',
      'Missing or Damaged Components': 'Missing or Damaged Components',
      'Change of Mind': 'Change of Mind',
      'Incorrect Specifications': 'Incorrect Specifications',
     
    },
    inputPlaceholder: 'Select a reason',
    showCancelButton: true,
    inputValidator: (value) => {
      if (!value) {
        return 'You need to select a reason!';
      }
    }
  });

  if (returnReason) {
    const orderId = '<%= orderData._id %>'; 
    const status = 'returnrequest'; 

    $.ajax({
      url: '/cancelOrReturn',
      type: 'POST',
      data: {
        orderId: orderId,
        status: status,
        returnReason: returnReason
      },
      success: function (response) {
        
        Swal.fire('Reason submitted successfully!', 'success');
      },
      error: function (error) {
       
        Swal.fire('Error', 'Failed to submit reason', 'error');
      },
    });
  }
});


    });
</script>


</body>
</html>
